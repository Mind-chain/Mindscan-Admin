generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/admin-client"
}

datasource db {
  provider = "postgresql"
  url      = env("ADMIN_DATABASE_URL")
}

model User {
  id           BigInt        @id @default(autoincrement())
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  email        String        @unique @db.VarChar
  password     String        @db.VarChar
  is_superuser Boolean       @default(false)
  UsersChains  UsersChains[]

  @@map("users")
}

model UsersChains {
  user_id  BigInt @default(autoincrement())
  chain_id BigInt
  user     User   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, chain_id])
  @@map("users_chains")
}

model RejectedSubmission {
  id            BigInt     @id @default(autoincrement())
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  submission_id BigInt     @default(autoincrement())
  reason        String     @db.VarChar
  submission    Submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("rejected_submissions")
}

model Submission {
  id                         BigInt                       @id @default(autoincrement())
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  chain_id                   BigInt
  token_address              String                       @db.VarChar
  status                     SubmissionStatus             @default(IN_PROCESS)
  blockscout_user_email      String                       @db.VarChar
  requester_name             String                       @db.VarChar
  requester_email            String                       @db.VarChar
  project_name               String?                      @db.VarChar
  project_website            String                       @db.VarChar
  project_email              String                       @db.VarChar
  icon_url                   String                       @db.VarChar
  project_description        String                       @db.VarChar
  project_sector             String?                      @db.VarChar
  comment                    String?                      @db.VarChar
  docs                       String?                      @db.VarChar
  github                     String?                      @db.VarChar
  telegram                   String?                      @db.VarChar
  linkedin                   String?                      @db.VarChar
  discord                    String?                      @db.VarChar
  slack                      String?                      @db.VarChar
  twitter                    String?                      @db.VarChar
  open_sea                   String?                      @db.VarChar
  facebook                   String?                      @db.VarChar
  medium                     String?                      @db.VarChar
  reddit                     String?                      @db.VarChar
  support                    String?                      @db.VarChar
  coin_market_cap_ticker     String?                      @db.VarChar
  coin_gecko_ticker          String?                      @db.VarChar
  defi_llama_ticker          String?                      @db.VarChar
  RejectedSubmission         RejectedSubmission[]
  WaitingForUpdateSubmission WaitingForUpdateSubmission[]

  @@map("submissions")
}

model WaitingForUpdateSubmission {
  id             BigInt     @id @default(autoincrement())
  created_at     DateTime   @default(now()) @db.Timestamp(6)
  submission_id  BigInt     @default(autoincrement())
  admin_comments String     @db.VarChar
  addressed      Boolean    @default(false)
  submission     Submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("waiting_for_update_submissions")
}

enum SubmissionStatus {
  IN_PROCESS         @map("in_process")
  WAITING_FOR_UPDATE @map("waiting_for_update")
  APPROVED           @map("approved")
  REJECTED           @map("rejected")

  @@map("submission_status")
}
