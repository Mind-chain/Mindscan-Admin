on: 
  workflow_dispatch:
  push:
    tags:
      - 'contracts-info/v*'

name: Build docker (contracts-info)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: blockscout/contracts-info

defaults:
  run:
    working-directory: contracts-info

jobs:
  push:
   name: Docker build and docker push
   timeout-minutes: 60
   runs-on: ubuntu-latest
   steps:
     - name: Checkout repository
       uses: actions/checkout@v2

     - uses: actions-ecosystem/action-regex-match@v2
       id: regex
       with:
         text: ${{ github.ref }}
         regex: '^(refs\/tags\/contracts-info\/(v\d+\.\d+\.\d+))|(refs\/heads\/(main))$'

     - name: Extract tag name
       id: tags_extractor
       run: |
         t=${{ steps.regex.outputs.group2 }}
         m=${{ steps.regex.outputs.group4 }}
         (if ! [[ "$t" == "" ]]; then echo tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$t, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest; elif ! [[ "$m" == "" ]]; then echo tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$m; else echo tags=; fi) >> $GITHUB_OUTPUT

     - name: Login to GitHub Container Registry
       uses: docker/login-action@v1
       with:
         registry: ${{ env.REGISTRY }}
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}

     - name: Extract metadata for Docker
       id: meta
       uses: docker/metadata-action@v3
       with:
         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Build and push
       uses: docker/build-push-action@v2
       with:
         context: "contracts-info"
         file: "contracts-info/contracts-info-server/Dockerfile"
         push: ${{ steps.tags_extractor.outputs.tags != '' }}
         tags: ${{ steps.tags_extractor.outputs.tags }}
         labels: ${{ steps.meta.outputs.labels }}
         cache-from: type=gha
         cache-to: type=gha,mode=max
